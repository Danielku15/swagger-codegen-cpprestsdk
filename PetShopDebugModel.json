[ {
  "importPath" : "#include \"ApiResponse.h\"",
  "model" : {
    "name" : "ApiResponse",
    "classname" : "ApiResponse",
    "classVarName" : "ApiResponse",
    "modelJson" : "{\r\n  \"type\" : \"object\",\r\n  \"properties\" : {\r\n    \"code\" : {\r\n      \"type\" : \"integer\",\r\n      \"format\" : \"int32\"\r\n    },\r\n    \"type\" : {\r\n      \"type\" : \"string\"\r\n    },\r\n    \"message\" : {\r\n      \"type\" : \"string\"\r\n    }\r\n  }\r\n}",
    "classFilename" : "ApiResponse",
    "vars" : [ {
      "baseName" : "code",
      "getter" : "getCode",
      "setter" : "setCode",
      "datatype" : "int32_t",
      "datatypeWithEnum" : "int32_t",
      "name" : "Code",
      "defaultValue" : "0",
      "defaultValueWithParam" : " = data.code;",
      "baseType" : "int32_t",
      "example" : "null",
      "jsonSchema" : "{\r\n  \"type\" : \"integer\",\r\n  \"format\" : \"int32\"\r\n}",
      "hasMore" : true,
      "isPrimitiveType" : true,
      "isNotContainer" : true,
      "isInteger" : true,
      "isEnum" : false,
      "vendorExtensions" : { }
    }, {
      "baseName" : "type",
      "complexType" : "utility::string_t",
      "getter" : "getType",
      "setter" : "setType",
      "datatype" : "utility::string_t",
      "datatypeWithEnum" : "utility::string_t",
      "name" : "Type",
      "defaultValue" : "U(\"\")",
      "defaultValueWithParam" : " = data.type;",
      "baseType" : "utility::string_t",
      "example" : "null",
      "jsonSchema" : "{\r\n  \"type\" : \"string\"\r\n}",
      "hasMore" : true,
      "isNotContainer" : true,
      "isString" : true,
      "isEnum" : false,
      "vendorExtensions" : { }
    }, {
      "baseName" : "message",
      "complexType" : "utility::string_t",
      "getter" : "getMessage",
      "setter" : "setMessage",
      "datatype" : "utility::string_t",
      "datatypeWithEnum" : "utility::string_t",
      "name" : "Message",
      "defaultValue" : "U(\"\")",
      "defaultValueWithParam" : " = data.message;",
      "baseType" : "utility::string_t",
      "example" : "null",
      "jsonSchema" : "{\r\n  \"type\" : \"string\"\r\n}",
      "isNotContainer" : true,
      "isString" : true,
      "isEnum" : false,
      "vendorExtensions" : { }
    } ],
    "allVars" : [ {
      "baseName" : "code",
      "getter" : "getCode",
      "setter" : "setCode",
      "datatype" : "int32_t",
      "datatypeWithEnum" : "int32_t",
      "name" : "Code",
      "defaultValue" : "0",
      "defaultValueWithParam" : " = data.code;",
      "baseType" : "int32_t",
      "example" : "null",
      "jsonSchema" : "{\r\n  \"type\" : \"integer\",\r\n  \"format\" : \"int32\"\r\n}",
      "hasMore" : true,
      "isPrimitiveType" : true,
      "isNotContainer" : true,
      "isInteger" : true,
      "isEnum" : false,
      "vendorExtensions" : { }
    }, {
      "baseName" : "type",
      "complexType" : "utility::string_t",
      "getter" : "getType",
      "setter" : "setType",
      "datatype" : "utility::string_t",
      "datatypeWithEnum" : "utility::string_t",
      "name" : "Type",
      "defaultValue" : "U(\"\")",
      "defaultValueWithParam" : " = data.type;",
      "baseType" : "utility::string_t",
      "example" : "null",
      "jsonSchema" : "{\r\n  \"type\" : \"string\"\r\n}",
      "hasMore" : true,
      "isNotContainer" : true,
      "isString" : true,
      "isEnum" : false,
      "vendorExtensions" : { }
    }, {
      "baseName" : "message",
      "complexType" : "utility::string_t",
      "getter" : "getMessage",
      "setter" : "setMessage",
      "datatype" : "utility::string_t",
      "datatypeWithEnum" : "utility::string_t",
      "name" : "Message",
      "defaultValue" : "U(\"\")",
      "defaultValueWithParam" : " = data.message;",
      "baseType" : "utility::string_t",
      "example" : "null",
      "jsonSchema" : "{\r\n  \"type\" : \"string\"\r\n}",
      "isNotContainer" : true,
      "isString" : true,
      "isEnum" : false,
      "vendorExtensions" : { }
    } ],
    "mandatory" : [ ],
    "allMandatory" : [ ],
    "imports" : [ "#include <cpprest/details/basic_types.h>" ],
    "hasVars" : true,
    "hasEnums" : false,
    "vendorExtensions" : { }
  }
}, {
  "importPath" : "#include \"Category.h\"",
  "model" : {
    "name" : "Category",
    "classname" : "Category",
    "classVarName" : "Category",
    "modelJson" : "{\r\n  \"type\" : \"object\",\r\n  \"properties\" : {\r\n    \"id\" : {\r\n      \"type\" : \"integer\",\r\n      \"format\" : \"int64\"\r\n    },\r\n    \"name\" : {\r\n      \"type\" : \"string\"\r\n    }\r\n  },\r\n  \"xml\" : {\r\n    \"name\" : \"Category\"\r\n  }\r\n}",
    "classFilename" : "Category",
    "vars" : [ {
      "baseName" : "id",
      "getter" : "getId",
      "setter" : "setId",
      "datatype" : "int64_t",
      "datatypeWithEnum" : "int64_t",
      "name" : "Id",
      "defaultValue" : "0L",
      "defaultValueWithParam" : " = data.id;",
      "baseType" : "int64_t",
      "example" : "null",
      "jsonSchema" : "{\r\n  \"type\" : \"integer\",\r\n  \"format\" : \"int64\"\r\n}",
      "hasMore" : true,
      "isPrimitiveType" : true,
      "isNotContainer" : true,
      "isLong" : true,
      "isEnum" : false,
      "vendorExtensions" : { }
    }, {
      "baseName" : "name",
      "complexType" : "utility::string_t",
      "getter" : "getName",
      "setter" : "setName",
      "datatype" : "utility::string_t",
      "datatypeWithEnum" : "utility::string_t",
      "name" : "Name",
      "defaultValue" : "U(\"\")",
      "defaultValueWithParam" : " = data.name;",
      "baseType" : "utility::string_t",
      "example" : "null",
      "jsonSchema" : "{\r\n  \"type\" : \"string\"\r\n}",
      "isNotContainer" : true,
      "isString" : true,
      "isEnum" : false,
      "vendorExtensions" : { }
    } ],
    "allVars" : [ {
      "baseName" : "id",
      "getter" : "getId",
      "setter" : "setId",
      "datatype" : "int64_t",
      "datatypeWithEnum" : "int64_t",
      "name" : "Id",
      "defaultValue" : "0L",
      "defaultValueWithParam" : " = data.id;",
      "baseType" : "int64_t",
      "example" : "null",
      "jsonSchema" : "{\r\n  \"type\" : \"integer\",\r\n  \"format\" : \"int64\"\r\n}",
      "hasMore" : true,
      "isPrimitiveType" : true,
      "isNotContainer" : true,
      "isLong" : true,
      "isEnum" : false,
      "vendorExtensions" : { }
    }, {
      "baseName" : "name",
      "complexType" : "utility::string_t",
      "getter" : "getName",
      "setter" : "setName",
      "datatype" : "utility::string_t",
      "datatypeWithEnum" : "utility::string_t",
      "name" : "Name",
      "defaultValue" : "U(\"\")",
      "defaultValueWithParam" : " = data.name;",
      "baseType" : "utility::string_t",
      "example" : "null",
      "jsonSchema" : "{\r\n  \"type\" : \"string\"\r\n}",
      "isNotContainer" : true,
      "isString" : true,
      "isEnum" : false,
      "vendorExtensions" : { }
    } ],
    "mandatory" : [ ],
    "allMandatory" : [ ],
    "imports" : [ "#include <cpprest/details/basic_types.h>" ],
    "hasVars" : true,
    "hasEnums" : false,
    "vendorExtensions" : { }
  }
}, {
  "importPath" : "#include \"Order.h\"",
  "model" : {
    "name" : "Order",
    "classname" : "Order",
    "classVarName" : "Order",
    "modelJson" : "{\r\n  \"type\" : \"object\",\r\n  \"properties\" : {\r\n    \"id\" : {\r\n      \"type\" : \"integer\",\r\n      \"format\" : \"int64\"\r\n    },\r\n    \"petId\" : {\r\n      \"type\" : \"integer\",\r\n      \"format\" : \"int64\"\r\n    },\r\n    \"quantity\" : {\r\n      \"type\" : \"integer\",\r\n      \"format\" : \"int32\"\r\n    },\r\n    \"shipDate\" : {\r\n      \"type\" : \"string\",\r\n      \"format\" : \"date-time\"\r\n    },\r\n    \"status\" : {\r\n      \"type\" : \"string\",\r\n      \"description\" : \"Order Status\",\r\n      \"enum\" : [ \"placed\", \"approved\", \"delivered\" ]\r\n    },\r\n    \"complete\" : {\r\n      \"type\" : \"boolean\",\r\n      \"default\" : false\r\n    }\r\n  },\r\n  \"xml\" : {\r\n    \"name\" : \"Order\"\r\n  }\r\n}",
    "classFilename" : "Order",
    "vars" : [ {
      "baseName" : "id",
      "getter" : "getId",
      "setter" : "setId",
      "datatype" : "int64_t",
      "datatypeWithEnum" : "int64_t",
      "name" : "Id",
      "defaultValue" : "0L",
      "defaultValueWithParam" : " = data.id;",
      "baseType" : "int64_t",
      "example" : "null",
      "jsonSchema" : "{\r\n  \"type\" : \"integer\",\r\n  \"format\" : \"int64\"\r\n}",
      "hasMore" : true,
      "isPrimitiveType" : true,
      "isNotContainer" : true,
      "isLong" : true,
      "isEnum" : false,
      "vendorExtensions" : { }
    }, {
      "baseName" : "petId",
      "getter" : "getPetId",
      "setter" : "setPetId",
      "datatype" : "int64_t",
      "datatypeWithEnum" : "int64_t",
      "name" : "PetId",
      "defaultValue" : "0L",
      "defaultValueWithParam" : " = data.petId;",
      "baseType" : "int64_t",
      "example" : "null",
      "jsonSchema" : "{\r\n  \"type\" : \"integer\",\r\n  \"format\" : \"int64\"\r\n}",
      "hasMore" : true,
      "isPrimitiveType" : true,
      "isNotContainer" : true,
      "isLong" : true,
      "isEnum" : false,
      "vendorExtensions" : { }
    }, {
      "baseName" : "quantity",
      "getter" : "getQuantity",
      "setter" : "setQuantity",
      "datatype" : "int32_t",
      "datatypeWithEnum" : "int32_t",
      "name" : "Quantity",
      "defaultValue" : "0",
      "defaultValueWithParam" : " = data.quantity;",
      "baseType" : "int32_t",
      "example" : "null",
      "jsonSchema" : "{\r\n  \"type\" : \"integer\",\r\n  \"format\" : \"int32\"\r\n}",
      "hasMore" : true,
      "isPrimitiveType" : true,
      "isNotContainer" : true,
      "isInteger" : true,
      "isEnum" : false,
      "vendorExtensions" : { }
    }, {
      "baseName" : "shipDate",
      "complexType" : "utility::datetime",
      "getter" : "getShipDate",
      "setter" : "setShipDate",
      "datatype" : "utility::datetime",
      "datatypeWithEnum" : "utility::datetime",
      "name" : "ShipDate",
      "defaultValue" : "utility::datetime()",
      "defaultValueWithParam" : " = data.shipDate;",
      "baseType" : "utility::datetime",
      "example" : "null",
      "jsonSchema" : "{\r\n  \"type\" : \"string\",\r\n  \"format\" : \"date-time\"\r\n}",
      "hasMore" : true,
      "isNotContainer" : true,
      "isDateTime" : true,
      "isEnum" : false,
      "vendorExtensions" : { }
    }, {
      "baseName" : "status",
      "complexType" : "utility::string_t",
      "getter" : "getStatus",
      "setter" : "setStatus",
      "description" : "Order Status",
      "datatype" : "utility::string_t",
      "datatypeWithEnum" : "StatusEnum",
      "name" : "Status",
      "defaultValue" : "U(\"\")",
      "defaultValueWithParam" : " = data.status;",
      "baseType" : "utility::string_t",
      "unescapedDescription" : "Order Status",
      "example" : "null",
      "jsonSchema" : "{\r\n  \"type\" : \"string\",\r\n  \"description\" : \"Order Status\",\r\n  \"enum\" : [ \"placed\", \"approved\", \"delivered\" ]\r\n}",
      "hasMore" : true,
      "isNotContainer" : true,
      "isString" : true,
      "isEnum" : true,
      "_enum" : [ "placed", "approved", "delivered" ],
      "allowableValues" : {
        "values" : [ "placed", "approved", "delivered" ]
      },
      "vendorExtensions" : { }
    }, {
      "baseName" : "complete",
      "getter" : "getComplete",
      "setter" : "setComplete",
      "datatype" : "bool",
      "datatypeWithEnum" : "bool",
      "name" : "Complete",
      "defaultValue" : "false",
      "defaultValueWithParam" : " = data.complete;",
      "baseType" : "bool",
      "example" : "null",
      "jsonSchema" : "{\r\n  \"type\" : \"boolean\",\r\n  \"default\" : false\r\n}",
      "isPrimitiveType" : true,
      "isNotContainer" : true,
      "isBoolean" : true,
      "isEnum" : false,
      "vendorExtensions" : { }
    } ],
    "allVars" : [ {
      "baseName" : "id",
      "getter" : "getId",
      "setter" : "setId",
      "datatype" : "int64_t",
      "datatypeWithEnum" : "int64_t",
      "name" : "Id",
      "defaultValue" : "0L",
      "defaultValueWithParam" : " = data.id;",
      "baseType" : "int64_t",
      "example" : "null",
      "jsonSchema" : "{\r\n  \"type\" : \"integer\",\r\n  \"format\" : \"int64\"\r\n}",
      "hasMore" : true,
      "isPrimitiveType" : true,
      "isNotContainer" : true,
      "isLong" : true,
      "isEnum" : false,
      "vendorExtensions" : { }
    }, {
      "baseName" : "petId",
      "getter" : "getPetId",
      "setter" : "setPetId",
      "datatype" : "int64_t",
      "datatypeWithEnum" : "int64_t",
      "name" : "PetId",
      "defaultValue" : "0L",
      "defaultValueWithParam" : " = data.petId;",
      "baseType" : "int64_t",
      "example" : "null",
      "jsonSchema" : "{\r\n  \"type\" : \"integer\",\r\n  \"format\" : \"int64\"\r\n}",
      "hasMore" : true,
      "isPrimitiveType" : true,
      "isNotContainer" : true,
      "isLong" : true,
      "isEnum" : false,
      "vendorExtensions" : { }
    }, {
      "baseName" : "quantity",
      "getter" : "getQuantity",
      "setter" : "setQuantity",
      "datatype" : "int32_t",
      "datatypeWithEnum" : "int32_t",
      "name" : "Quantity",
      "defaultValue" : "0",
      "defaultValueWithParam" : " = data.quantity;",
      "baseType" : "int32_t",
      "example" : "null",
      "jsonSchema" : "{\r\n  \"type\" : \"integer\",\r\n  \"format\" : \"int32\"\r\n}",
      "hasMore" : true,
      "isPrimitiveType" : true,
      "isNotContainer" : true,
      "isInteger" : true,
      "isEnum" : false,
      "vendorExtensions" : { }
    }, {
      "baseName" : "shipDate",
      "complexType" : "utility::datetime",
      "getter" : "getShipDate",
      "setter" : "setShipDate",
      "datatype" : "utility::datetime",
      "datatypeWithEnum" : "utility::datetime",
      "name" : "ShipDate",
      "defaultValue" : "utility::datetime()",
      "defaultValueWithParam" : " = data.shipDate;",
      "baseType" : "utility::datetime",
      "example" : "null",
      "jsonSchema" : "{\r\n  \"type\" : \"string\",\r\n  \"format\" : \"date-time\"\r\n}",
      "hasMore" : true,
      "isNotContainer" : true,
      "isDateTime" : true,
      "isEnum" : false,
      "vendorExtensions" : { }
    }, {
      "baseName" : "status",
      "complexType" : "utility::string_t",
      "getter" : "getStatus",
      "setter" : "setStatus",
      "description" : "Order Status",
      "datatype" : "utility::string_t",
      "datatypeWithEnum" : "StatusEnum",
      "name" : "Status",
      "defaultValue" : "U(\"\")",
      "defaultValueWithParam" : " = data.status;",
      "baseType" : "utility::string_t",
      "unescapedDescription" : "Order Status",
      "example" : "null",
      "jsonSchema" : "{\r\n  \"type\" : \"string\",\r\n  \"description\" : \"Order Status\",\r\n  \"enum\" : [ \"placed\", \"approved\", \"delivered\" ]\r\n}",
      "hasMore" : true,
      "isNotContainer" : true,
      "isString" : true,
      "isEnum" : true,
      "_enum" : [ "placed", "approved", "delivered" ],
      "allowableValues" : {
        "values" : [ "placed", "approved", "delivered" ]
      },
      "vendorExtensions" : { }
    }, {
      "baseName" : "complete",
      "getter" : "getComplete",
      "setter" : "setComplete",
      "datatype" : "bool",
      "datatypeWithEnum" : "bool",
      "name" : "Complete",
      "defaultValue" : "false",
      "defaultValueWithParam" : " = data.complete;",
      "baseType" : "bool",
      "example" : "null",
      "jsonSchema" : "{\r\n  \"type\" : \"boolean\",\r\n  \"default\" : false\r\n}",
      "isPrimitiveType" : true,
      "isNotContainer" : true,
      "isBoolean" : true,
      "isEnum" : false,
      "vendorExtensions" : { }
    } ],
    "mandatory" : [ ],
    "allMandatory" : [ ],
    "imports" : [ "#include <cpprest/details/basic_types.h>" ],
    "hasVars" : true,
    "hasEnums" : true,
    "vendorExtensions" : { }
  }
}, {
  "importPath" : "#include \"Pet.h\"",
  "model" : {
    "name" : "Pet",
    "classname" : "Pet",
    "classVarName" : "Pet",
    "modelJson" : "{\r\n  \"type\" : \"object\",\r\n  \"required\" : [ \"name\", \"photoUrls\" ],\r\n  \"properties\" : {\r\n    \"id\" : {\r\n      \"type\" : \"integer\",\r\n      \"format\" : \"int64\"\r\n    },\r\n    \"category\" : {\r\n      \"$ref\" : \"#/definitions/Category\"\r\n    },\r\n    \"name\" : {\r\n      \"type\" : \"string\",\r\n      \"example\" : \"doggie\"\r\n    },\r\n    \"photoUrls\" : {\r\n      \"type\" : \"array\",\r\n      \"xml\" : {\r\n        \"name\" : \"photoUrl\",\r\n        \"wrapped\" : true\r\n      },\r\n      \"items\" : {\r\n        \"type\" : \"string\"\r\n      }\r\n    },\r\n    \"tags\" : {\r\n      \"type\" : \"array\",\r\n      \"xml\" : {\r\n        \"name\" : \"tag\",\r\n        \"wrapped\" : true\r\n      },\r\n      \"items\" : {\r\n        \"$ref\" : \"#/definitions/Tag\"\r\n      }\r\n    },\r\n    \"status\" : {\r\n      \"type\" : \"string\",\r\n      \"description\" : \"pet status in the store\",\r\n      \"enum\" : [ \"available\", \"pending\", \"sold\" ]\r\n    }\r\n  },\r\n  \"xml\" : {\r\n    \"name\" : \"Pet\"\r\n  }\r\n}",
    "classFilename" : "Pet",
    "vars" : [ {
      "baseName" : "id",
      "getter" : "getId",
      "setter" : "setId",
      "datatype" : "int64_t",
      "datatypeWithEnum" : "int64_t",
      "name" : "Id",
      "defaultValue" : "0L",
      "defaultValueWithParam" : " = data.id;",
      "baseType" : "int64_t",
      "example" : "null",
      "jsonSchema" : "{\r\n  \"type\" : \"integer\",\r\n  \"format\" : \"int64\"\r\n}",
      "hasMore" : true,
      "isPrimitiveType" : true,
      "isNotContainer" : true,
      "isLong" : true,
      "isEnum" : false,
      "vendorExtensions" : { }
    }, {
      "baseName" : "category",
      "complexType" : "Category",
      "getter" : "getCategory",
      "setter" : "setCategory",
      "datatype" : "std::shared_ptr<Category>",
      "datatypeWithEnum" : "std::shared_ptr<Category>",
      "name" : "Category",
      "defaultValue" : "new Category()",
      "defaultValueWithParam" : " = data.category;",
      "baseType" : "Category",
      "example" : "null",
      "jsonSchema" : "{\r\n  \"$ref\" : \"#/definitions/Category\"\r\n}",
      "hasMore" : true,
      "isNotContainer" : true,
      "isEnum" : false,
      "vendorExtensions" : { }
    }, {
      "baseName" : "name",
      "complexType" : "utility::string_t",
      "getter" : "getName",
      "setter" : "setName",
      "datatype" : "utility::string_t",
      "datatypeWithEnum" : "utility::string_t",
      "name" : "Name",
      "defaultValue" : "U(\"\")",
      "defaultValueWithParam" : " = data.name;",
      "baseType" : "utility::string_t",
      "example" : "doggie",
      "jsonSchema" : "{\r\n  \"type\" : \"string\",\r\n  \"example\" : \"doggie\"\r\n}",
      "hasMore" : true,
      "required" : true,
      "isNotContainer" : true,
      "isString" : true,
      "isEnum" : false,
      "vendorExtensions" : { }
    }, {
      "baseName" : "photoUrls",
      "complexType" : "utility::string_t",
      "getter" : "getPhotoUrls",
      "setter" : "setPhotoUrls",
      "datatype" : "std::vector<utility::string_t>",
      "datatypeWithEnum" : "std::vector<utility::string_t>",
      "name" : "PhotoUrls",
      "defaultValue" : "std::vector<std::shared_ptr<utility::string_t>>()",
      "defaultValueWithParam" : " = data.photoUrls;",
      "baseType" : "std::vector",
      "containerType" : "array",
      "example" : "null",
      "jsonSchema" : "{\r\n  \"type\" : \"array\",\r\n  \"xml\" : {\r\n    \"name\" : \"photoUrl\",\r\n    \"wrapped\" : true\r\n  },\r\n  \"items\" : {\r\n    \"type\" : \"string\"\r\n  }\r\n}",
      "hasMore" : true,
      "required" : true,
      "isContainer" : true,
      "isListContainer" : true,
      "isEnum" : false,
      "items" : {
        "baseName" : "PhotoUrls",
        "complexType" : "utility::string_t",
        "getter" : "getPhotoUrls",
        "setter" : "setPhotoUrls",
        "datatype" : "utility::string_t",
        "datatypeWithEnum" : "utility::string_t",
        "name" : "PhotoUrls",
        "defaultValue" : "U(\"\")",
        "defaultValueWithParam" : " = data.PhotoUrls;",
        "baseType" : "utility::string_t",
        "example" : "null",
        "jsonSchema" : "{\r\n  \"type\" : \"string\"\r\n}",
        "isNotContainer" : true,
        "isString" : true,
        "isEnum" : false,
        "vendorExtensions" : { }
      },
      "vendorExtensions" : { }
    }, {
      "baseName" : "tags",
      "complexType" : "Tag",
      "getter" : "getTags",
      "setter" : "setTags",
      "datatype" : "std::vector<std::shared_ptr<Tag>>",
      "datatypeWithEnum" : "std::vector<std::shared_ptr<Tag>>",
      "name" : "Tags",
      "defaultValue" : "std::vector<std::shared_ptr<Tag>>()",
      "defaultValueWithParam" : " = data.tags;",
      "baseType" : "std::vector",
      "containerType" : "array",
      "example" : "null",
      "jsonSchema" : "{\r\n  \"type\" : \"array\",\r\n  \"xml\" : {\r\n    \"name\" : \"tag\",\r\n    \"wrapped\" : true\r\n  },\r\n  \"items\" : {\r\n    \"$ref\" : \"#/definitions/Tag\"\r\n  }\r\n}",
      "hasMore" : true,
      "isContainer" : true,
      "isListContainer" : true,
      "isEnum" : false,
      "items" : {
        "baseName" : "Tags",
        "complexType" : "Tag",
        "getter" : "getTags",
        "setter" : "setTags",
        "datatype" : "std::shared_ptr<Tag>",
        "datatypeWithEnum" : "std::shared_ptr<Tag>",
        "name" : "Tags",
        "defaultValue" : "new Tag()",
        "defaultValueWithParam" : " = data.Tags;",
        "baseType" : "Tag",
        "example" : "null",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/definitions/Tag\"\r\n}",
        "isNotContainer" : true,
        "isEnum" : false,
        "vendorExtensions" : { }
      },
      "vendorExtensions" : { }
    }, {
      "baseName" : "status",
      "complexType" : "utility::string_t",
      "getter" : "getStatus",
      "setter" : "setStatus",
      "description" : "pet status in the store",
      "datatype" : "utility::string_t",
      "datatypeWithEnum" : "StatusEnum",
      "name" : "Status",
      "defaultValue" : "U(\"\")",
      "defaultValueWithParam" : " = data.status;",
      "baseType" : "utility::string_t",
      "unescapedDescription" : "pet status in the store",
      "example" : "null",
      "jsonSchema" : "{\r\n  \"type\" : \"string\",\r\n  \"description\" : \"pet status in the store\",\r\n  \"enum\" : [ \"available\", \"pending\", \"sold\" ]\r\n}",
      "isNotContainer" : true,
      "isString" : true,
      "isEnum" : true,
      "_enum" : [ "available", "pending", "sold" ],
      "allowableValues" : {
        "values" : [ "available", "pending", "sold" ]
      },
      "vendorExtensions" : { }
    } ],
    "allVars" : [ {
      "baseName" : "id",
      "getter" : "getId",
      "setter" : "setId",
      "datatype" : "int64_t",
      "datatypeWithEnum" : "int64_t",
      "name" : "Id",
      "defaultValue" : "0L",
      "defaultValueWithParam" : " = data.id;",
      "baseType" : "int64_t",
      "example" : "null",
      "jsonSchema" : "{\r\n  \"type\" : \"integer\",\r\n  \"format\" : \"int64\"\r\n}",
      "hasMore" : true,
      "isPrimitiveType" : true,
      "isNotContainer" : true,
      "isLong" : true,
      "isEnum" : false,
      "vendorExtensions" : { }
    }, {
      "baseName" : "category",
      "complexType" : "Category",
      "getter" : "getCategory",
      "setter" : "setCategory",
      "datatype" : "std::shared_ptr<Category>",
      "datatypeWithEnum" : "std::shared_ptr<Category>",
      "name" : "Category",
      "defaultValue" : "new Category()",
      "defaultValueWithParam" : " = data.category;",
      "baseType" : "Category",
      "example" : "null",
      "jsonSchema" : "{\r\n  \"$ref\" : \"#/definitions/Category\"\r\n}",
      "hasMore" : true,
      "isNotContainer" : true,
      "isEnum" : false,
      "vendorExtensions" : { }
    }, {
      "baseName" : "name",
      "complexType" : "utility::string_t",
      "getter" : "getName",
      "setter" : "setName",
      "datatype" : "utility::string_t",
      "datatypeWithEnum" : "utility::string_t",
      "name" : "Name",
      "defaultValue" : "U(\"\")",
      "defaultValueWithParam" : " = data.name;",
      "baseType" : "utility::string_t",
      "example" : "doggie",
      "jsonSchema" : "{\r\n  \"type\" : \"string\",\r\n  \"example\" : \"doggie\"\r\n}",
      "hasMore" : true,
      "required" : true,
      "isNotContainer" : true,
      "isString" : true,
      "isEnum" : false,
      "vendorExtensions" : { }
    }, {
      "baseName" : "photoUrls",
      "complexType" : "utility::string_t",
      "getter" : "getPhotoUrls",
      "setter" : "setPhotoUrls",
      "datatype" : "std::vector<utility::string_t>",
      "datatypeWithEnum" : "std::vector<utility::string_t>",
      "name" : "PhotoUrls",
      "defaultValue" : "std::vector<std::shared_ptr<utility::string_t>>()",
      "defaultValueWithParam" : " = data.photoUrls;",
      "baseType" : "std::vector",
      "containerType" : "array",
      "example" : "null",
      "jsonSchema" : "{\r\n  \"type\" : \"array\",\r\n  \"xml\" : {\r\n    \"name\" : \"photoUrl\",\r\n    \"wrapped\" : true\r\n  },\r\n  \"items\" : {\r\n    \"type\" : \"string\"\r\n  }\r\n}",
      "hasMore" : true,
      "required" : true,
      "isContainer" : true,
      "isListContainer" : true,
      "isEnum" : false,
      "items" : {
        "baseName" : "PhotoUrls",
        "complexType" : "utility::string_t",
        "getter" : "getPhotoUrls",
        "setter" : "setPhotoUrls",
        "datatype" : "utility::string_t",
        "datatypeWithEnum" : "utility::string_t",
        "name" : "PhotoUrls",
        "defaultValue" : "U(\"\")",
        "defaultValueWithParam" : " = data.PhotoUrls;",
        "baseType" : "utility::string_t",
        "example" : "null",
        "jsonSchema" : "{\r\n  \"type\" : \"string\"\r\n}",
        "isNotContainer" : true,
        "isString" : true,
        "isEnum" : false,
        "vendorExtensions" : { }
      },
      "vendorExtensions" : { }
    }, {
      "baseName" : "tags",
      "complexType" : "Tag",
      "getter" : "getTags",
      "setter" : "setTags",
      "datatype" : "std::vector<std::shared_ptr<Tag>>",
      "datatypeWithEnum" : "std::vector<std::shared_ptr<Tag>>",
      "name" : "Tags",
      "defaultValue" : "std::vector<std::shared_ptr<Tag>>()",
      "defaultValueWithParam" : " = data.tags;",
      "baseType" : "std::vector",
      "containerType" : "array",
      "example" : "null",
      "jsonSchema" : "{\r\n  \"type\" : \"array\",\r\n  \"xml\" : {\r\n    \"name\" : \"tag\",\r\n    \"wrapped\" : true\r\n  },\r\n  \"items\" : {\r\n    \"$ref\" : \"#/definitions/Tag\"\r\n  }\r\n}",
      "hasMore" : true,
      "isContainer" : true,
      "isListContainer" : true,
      "isEnum" : false,
      "items" : {
        "baseName" : "Tags",
        "complexType" : "Tag",
        "getter" : "getTags",
        "setter" : "setTags",
        "datatype" : "std::shared_ptr<Tag>",
        "datatypeWithEnum" : "std::shared_ptr<Tag>",
        "name" : "Tags",
        "defaultValue" : "new Tag()",
        "defaultValueWithParam" : " = data.Tags;",
        "baseType" : "Tag",
        "example" : "null",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/definitions/Tag\"\r\n}",
        "isNotContainer" : true,
        "isEnum" : false,
        "vendorExtensions" : { }
      },
      "vendorExtensions" : { }
    }, {
      "baseName" : "status",
      "complexType" : "utility::string_t",
      "getter" : "getStatus",
      "setter" : "setStatus",
      "description" : "pet status in the store",
      "datatype" : "utility::string_t",
      "datatypeWithEnum" : "StatusEnum",
      "name" : "Status",
      "defaultValue" : "U(\"\")",
      "defaultValueWithParam" : " = data.status;",
      "baseType" : "utility::string_t",
      "unescapedDescription" : "pet status in the store",
      "example" : "null",
      "jsonSchema" : "{\r\n  \"type\" : \"string\",\r\n  \"description\" : \"pet status in the store\",\r\n  \"enum\" : [ \"available\", \"pending\", \"sold\" ]\r\n}",
      "isNotContainer" : true,
      "isString" : true,
      "isEnum" : true,
      "_enum" : [ "available", "pending", "sold" ],
      "allowableValues" : {
        "values" : [ "available", "pending", "sold" ]
      },
      "vendorExtensions" : { }
    } ],
    "mandatory" : [ "name", "photoUrls" ],
    "allMandatory" : [ "name", "photoUrls" ],
    "imports" : [ "#include \"Tag.h\"", "#include <cpprest/details/basic_types.h>", "#include \"Category.h\"", "#include <vector>" ],
    "hasVars" : true,
    "hasEnums" : true,
    "vendorExtensions" : { }
  }
}, {
  "importPath" : "#include \"Tag.h\"",
  "model" : {
    "name" : "Tag",
    "classname" : "Tag",
    "classVarName" : "Tag",
    "modelJson" : "{\r\n  \"type\" : \"object\",\r\n  \"properties\" : {\r\n    \"id\" : {\r\n      \"type\" : \"integer\",\r\n      \"format\" : \"int64\"\r\n    },\r\n    \"name\" : {\r\n      \"type\" : \"string\"\r\n    }\r\n  },\r\n  \"xml\" : {\r\n    \"name\" : \"Tag\"\r\n  }\r\n}",
    "classFilename" : "Tag",
    "vars" : [ {
      "baseName" : "id",
      "getter" : "getId",
      "setter" : "setId",
      "datatype" : "int64_t",
      "datatypeWithEnum" : "int64_t",
      "name" : "Id",
      "defaultValue" : "0L",
      "defaultValueWithParam" : " = data.id;",
      "baseType" : "int64_t",
      "example" : "null",
      "jsonSchema" : "{\r\n  \"type\" : \"integer\",\r\n  \"format\" : \"int64\"\r\n}",
      "hasMore" : true,
      "isPrimitiveType" : true,
      "isNotContainer" : true,
      "isLong" : true,
      "isEnum" : false,
      "vendorExtensions" : { }
    }, {
      "baseName" : "name",
      "complexType" : "utility::string_t",
      "getter" : "getName",
      "setter" : "setName",
      "datatype" : "utility::string_t",
      "datatypeWithEnum" : "utility::string_t",
      "name" : "Name",
      "defaultValue" : "U(\"\")",
      "defaultValueWithParam" : " = data.name;",
      "baseType" : "utility::string_t",
      "example" : "null",
      "jsonSchema" : "{\r\n  \"type\" : \"string\"\r\n}",
      "isNotContainer" : true,
      "isString" : true,
      "isEnum" : false,
      "vendorExtensions" : { }
    } ],
    "allVars" : [ {
      "baseName" : "id",
      "getter" : "getId",
      "setter" : "setId",
      "datatype" : "int64_t",
      "datatypeWithEnum" : "int64_t",
      "name" : "Id",
      "defaultValue" : "0L",
      "defaultValueWithParam" : " = data.id;",
      "baseType" : "int64_t",
      "example" : "null",
      "jsonSchema" : "{\r\n  \"type\" : \"integer\",\r\n  \"format\" : \"int64\"\r\n}",
      "hasMore" : true,
      "isPrimitiveType" : true,
      "isNotContainer" : true,
      "isLong" : true,
      "isEnum" : false,
      "vendorExtensions" : { }
    }, {
      "baseName" : "name",
      "complexType" : "utility::string_t",
      "getter" : "getName",
      "setter" : "setName",
      "datatype" : "utility::string_t",
      "datatypeWithEnum" : "utility::string_t",
      "name" : "Name",
      "defaultValue" : "U(\"\")",
      "defaultValueWithParam" : " = data.name;",
      "baseType" : "utility::string_t",
      "example" : "null",
      "jsonSchema" : "{\r\n  \"type\" : \"string\"\r\n}",
      "isNotContainer" : true,
      "isString" : true,
      "isEnum" : false,
      "vendorExtensions" : { }
    } ],
    "mandatory" : [ ],
    "allMandatory" : [ ],
    "imports" : [ "#include <cpprest/details/basic_types.h>" ],
    "hasVars" : true,
    "hasEnums" : false,
    "vendorExtensions" : { }
  }
}, {
  "importPath" : "#include \"User.h\"",
  "model" : {
    "name" : "User",
    "classname" : "User",
    "classVarName" : "User",
    "modelJson" : "{\r\n  \"type\" : \"object\",\r\n  \"properties\" : {\r\n    \"id\" : {\r\n      \"type\" : \"integer\",\r\n      \"format\" : \"int64\"\r\n    },\r\n    \"username\" : {\r\n      \"type\" : \"string\"\r\n    },\r\n    \"firstName\" : {\r\n      \"type\" : \"string\"\r\n    },\r\n    \"lastName\" : {\r\n      \"type\" : \"string\"\r\n    },\r\n    \"email\" : {\r\n      \"type\" : \"string\"\r\n    },\r\n    \"password\" : {\r\n      \"type\" : \"string\"\r\n    },\r\n    \"phone\" : {\r\n      \"type\" : \"string\"\r\n    },\r\n    \"userStatus\" : {\r\n      \"type\" : \"integer\",\r\n      \"format\" : \"int32\",\r\n      \"description\" : \"User Status\"\r\n    }\r\n  },\r\n  \"xml\" : {\r\n    \"name\" : \"User\"\r\n  }\r\n}",
    "classFilename" : "User",
    "vars" : [ {
      "baseName" : "id",
      "getter" : "getId",
      "setter" : "setId",
      "datatype" : "int64_t",
      "datatypeWithEnum" : "int64_t",
      "name" : "Id",
      "defaultValue" : "0L",
      "defaultValueWithParam" : " = data.id;",
      "baseType" : "int64_t",
      "example" : "null",
      "jsonSchema" : "{\r\n  \"type\" : \"integer\",\r\n  \"format\" : \"int64\"\r\n}",
      "hasMore" : true,
      "isPrimitiveType" : true,
      "isNotContainer" : true,
      "isLong" : true,
      "isEnum" : false,
      "vendorExtensions" : { }
    }, {
      "baseName" : "username",
      "complexType" : "utility::string_t",
      "getter" : "getUsername",
      "setter" : "setUsername",
      "datatype" : "utility::string_t",
      "datatypeWithEnum" : "utility::string_t",
      "name" : "Username",
      "defaultValue" : "U(\"\")",
      "defaultValueWithParam" : " = data.username;",
      "baseType" : "utility::string_t",
      "example" : "null",
      "jsonSchema" : "{\r\n  \"type\" : \"string\"\r\n}",
      "hasMore" : true,
      "isNotContainer" : true,
      "isString" : true,
      "isEnum" : false,
      "vendorExtensions" : { }
    }, {
      "baseName" : "firstName",
      "complexType" : "utility::string_t",
      "getter" : "getFirstName",
      "setter" : "setFirstName",
      "datatype" : "utility::string_t",
      "datatypeWithEnum" : "utility::string_t",
      "name" : "FirstName",
      "defaultValue" : "U(\"\")",
      "defaultValueWithParam" : " = data.firstName;",
      "baseType" : "utility::string_t",
      "example" : "null",
      "jsonSchema" : "{\r\n  \"type\" : \"string\"\r\n}",
      "hasMore" : true,
      "isNotContainer" : true,
      "isString" : true,
      "isEnum" : false,
      "vendorExtensions" : { }
    }, {
      "baseName" : "lastName",
      "complexType" : "utility::string_t",
      "getter" : "getLastName",
      "setter" : "setLastName",
      "datatype" : "utility::string_t",
      "datatypeWithEnum" : "utility::string_t",
      "name" : "LastName",
      "defaultValue" : "U(\"\")",
      "defaultValueWithParam" : " = data.lastName;",
      "baseType" : "utility::string_t",
      "example" : "null",
      "jsonSchema" : "{\r\n  \"type\" : \"string\"\r\n}",
      "hasMore" : true,
      "isNotContainer" : true,
      "isString" : true,
      "isEnum" : false,
      "vendorExtensions" : { }
    }, {
      "baseName" : "email",
      "complexType" : "utility::string_t",
      "getter" : "getEmail",
      "setter" : "setEmail",
      "datatype" : "utility::string_t",
      "datatypeWithEnum" : "utility::string_t",
      "name" : "Email",
      "defaultValue" : "U(\"\")",
      "defaultValueWithParam" : " = data.email;",
      "baseType" : "utility::string_t",
      "example" : "null",
      "jsonSchema" : "{\r\n  \"type\" : \"string\"\r\n}",
      "hasMore" : true,
      "isNotContainer" : true,
      "isString" : true,
      "isEnum" : false,
      "vendorExtensions" : { }
    }, {
      "baseName" : "password",
      "complexType" : "utility::string_t",
      "getter" : "getPassword",
      "setter" : "setPassword",
      "datatype" : "utility::string_t",
      "datatypeWithEnum" : "utility::string_t",
      "name" : "Password",
      "defaultValue" : "U(\"\")",
      "defaultValueWithParam" : " = data.password;",
      "baseType" : "utility::string_t",
      "example" : "null",
      "jsonSchema" : "{\r\n  \"type\" : \"string\"\r\n}",
      "hasMore" : true,
      "isNotContainer" : true,
      "isString" : true,
      "isEnum" : false,
      "vendorExtensions" : { }
    }, {
      "baseName" : "phone",
      "complexType" : "utility::string_t",
      "getter" : "getPhone",
      "setter" : "setPhone",
      "datatype" : "utility::string_t",
      "datatypeWithEnum" : "utility::string_t",
      "name" : "Phone",
      "defaultValue" : "U(\"\")",
      "defaultValueWithParam" : " = data.phone;",
      "baseType" : "utility::string_t",
      "example" : "null",
      "jsonSchema" : "{\r\n  \"type\" : \"string\"\r\n}",
      "hasMore" : true,
      "isNotContainer" : true,
      "isString" : true,
      "isEnum" : false,
      "vendorExtensions" : { }
    }, {
      "baseName" : "userStatus",
      "getter" : "getUserStatus",
      "setter" : "setUserStatus",
      "description" : "User Status",
      "datatype" : "int32_t",
      "datatypeWithEnum" : "int32_t",
      "name" : "UserStatus",
      "defaultValue" : "0",
      "defaultValueWithParam" : " = data.userStatus;",
      "baseType" : "int32_t",
      "unescapedDescription" : "User Status",
      "example" : "null",
      "jsonSchema" : "{\r\n  \"type\" : \"integer\",\r\n  \"format\" : \"int32\",\r\n  \"description\" : \"User Status\"\r\n}",
      "isPrimitiveType" : true,
      "isNotContainer" : true,
      "isInteger" : true,
      "isEnum" : false,
      "vendorExtensions" : { }
    } ],
    "allVars" : [ {
      "baseName" : "id",
      "getter" : "getId",
      "setter" : "setId",
      "datatype" : "int64_t",
      "datatypeWithEnum" : "int64_t",
      "name" : "Id",
      "defaultValue" : "0L",
      "defaultValueWithParam" : " = data.id;",
      "baseType" : "int64_t",
      "example" : "null",
      "jsonSchema" : "{\r\n  \"type\" : \"integer\",\r\n  \"format\" : \"int64\"\r\n}",
      "hasMore" : true,
      "isPrimitiveType" : true,
      "isNotContainer" : true,
      "isLong" : true,
      "isEnum" : false,
      "vendorExtensions" : { }
    }, {
      "baseName" : "username",
      "complexType" : "utility::string_t",
      "getter" : "getUsername",
      "setter" : "setUsername",
      "datatype" : "utility::string_t",
      "datatypeWithEnum" : "utility::string_t",
      "name" : "Username",
      "defaultValue" : "U(\"\")",
      "defaultValueWithParam" : " = data.username;",
      "baseType" : "utility::string_t",
      "example" : "null",
      "jsonSchema" : "{\r\n  \"type\" : \"string\"\r\n}",
      "hasMore" : true,
      "isNotContainer" : true,
      "isString" : true,
      "isEnum" : false,
      "vendorExtensions" : { }
    }, {
      "baseName" : "firstName",
      "complexType" : "utility::string_t",
      "getter" : "getFirstName",
      "setter" : "setFirstName",
      "datatype" : "utility::string_t",
      "datatypeWithEnum" : "utility::string_t",
      "name" : "FirstName",
      "defaultValue" : "U(\"\")",
      "defaultValueWithParam" : " = data.firstName;",
      "baseType" : "utility::string_t",
      "example" : "null",
      "jsonSchema" : "{\r\n  \"type\" : \"string\"\r\n}",
      "hasMore" : true,
      "isNotContainer" : true,
      "isString" : true,
      "isEnum" : false,
      "vendorExtensions" : { }
    }, {
      "baseName" : "lastName",
      "complexType" : "utility::string_t",
      "getter" : "getLastName",
      "setter" : "setLastName",
      "datatype" : "utility::string_t",
      "datatypeWithEnum" : "utility::string_t",
      "name" : "LastName",
      "defaultValue" : "U(\"\")",
      "defaultValueWithParam" : " = data.lastName;",
      "baseType" : "utility::string_t",
      "example" : "null",
      "jsonSchema" : "{\r\n  \"type\" : \"string\"\r\n}",
      "hasMore" : true,
      "isNotContainer" : true,
      "isString" : true,
      "isEnum" : false,
      "vendorExtensions" : { }
    }, {
      "baseName" : "email",
      "complexType" : "utility::string_t",
      "getter" : "getEmail",
      "setter" : "setEmail",
      "datatype" : "utility::string_t",
      "datatypeWithEnum" : "utility::string_t",
      "name" : "Email",
      "defaultValue" : "U(\"\")",
      "defaultValueWithParam" : " = data.email;",
      "baseType" : "utility::string_t",
      "example" : "null",
      "jsonSchema" : "{\r\n  \"type\" : \"string\"\r\n}",
      "hasMore" : true,
      "isNotContainer" : true,
      "isString" : true,
      "isEnum" : false,
      "vendorExtensions" : { }
    }, {
      "baseName" : "password",
      "complexType" : "utility::string_t",
      "getter" : "getPassword",
      "setter" : "setPassword",
      "datatype" : "utility::string_t",
      "datatypeWithEnum" : "utility::string_t",
      "name" : "Password",
      "defaultValue" : "U(\"\")",
      "defaultValueWithParam" : " = data.password;",
      "baseType" : "utility::string_t",
      "example" : "null",
      "jsonSchema" : "{\r\n  \"type\" : \"string\"\r\n}",
      "hasMore" : true,
      "isNotContainer" : true,
      "isString" : true,
      "isEnum" : false,
      "vendorExtensions" : { }
    }, {
      "baseName" : "phone",
      "complexType" : "utility::string_t",
      "getter" : "getPhone",
      "setter" : "setPhone",
      "datatype" : "utility::string_t",
      "datatypeWithEnum" : "utility::string_t",
      "name" : "Phone",
      "defaultValue" : "U(\"\")",
      "defaultValueWithParam" : " = data.phone;",
      "baseType" : "utility::string_t",
      "example" : "null",
      "jsonSchema" : "{\r\n  \"type\" : \"string\"\r\n}",
      "hasMore" : true,
      "isNotContainer" : true,
      "isString" : true,
      "isEnum" : false,
      "vendorExtensions" : { }
    }, {
      "baseName" : "userStatus",
      "getter" : "getUserStatus",
      "setter" : "setUserStatus",
      "description" : "User Status",
      "datatype" : "int32_t",
      "datatypeWithEnum" : "int32_t",
      "name" : "UserStatus",
      "defaultValue" : "0",
      "defaultValueWithParam" : " = data.userStatus;",
      "baseType" : "int32_t",
      "unescapedDescription" : "User Status",
      "example" : "null",
      "jsonSchema" : "{\r\n  \"type\" : \"integer\",\r\n  \"format\" : \"int32\",\r\n  \"description\" : \"User Status\"\r\n}",
      "isPrimitiveType" : true,
      "isNotContainer" : true,
      "isInteger" : true,
      "isEnum" : false,
      "vendorExtensions" : { }
    } ],
    "mandatory" : [ ],
    "allMandatory" : [ ],
    "imports" : [ "#include <cpprest/details/basic_types.h>" ],
    "hasVars" : true,
    "hasEnums" : false,
    "vendorExtensions" : { }
  }
} ]